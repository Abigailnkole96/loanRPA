pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                // Create a virtual environment and install dependencies
                sh '''
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install -r app/requirements.txt
                '''
            }
        }
        stage('Test') {
            steps {
                // Activate the virtual environment and run tests
                sh '''
                    echo "Activating virtual environment"
                    source venv/bin/activate
                    echo "Running unittests"
                    python -m unittest discover || { 
                        echo "Unittest failed, trying pytest..."; 
                        pytest --disable-warnings || { 
                            echo "Pytest also failed"; 
                            exit 1; 
                        } 
                    }
                '''
            }
        }
        stage('Deploy') {
            steps {
                // Activate the virtual environment before deploying
                sh '''
                    echo "Activating virtual environment for deployment"
                    source venv/bin/activate
                    terraform -chdir=infrastructure/ apply -auto-approve
                '''
            }
        }
    }
}
