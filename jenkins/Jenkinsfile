pipeline {
    agent any
    environment {
        // Specify your git credentials for accessing the GitHub repo
        GIT_CREDENTIALS = credentials('github-creds')
    }
    stages {
        stage('Checkout SCM') {
            steps {
                // Checkout the code from the GitHub repository
                git credentialsId: "${GIT_CREDENTIALS}", url: 'https://github.com/Abigailnkole96/loanRPA.git', branch: 'main'
            }
        }

        stage('Set up Python Environment') {
            steps {
                sh '''
                    # Set up a Python virtual environment
                    python3 -m venv venv
                    . venv/bin/activate

                    # Upgrade pip to the latest version
                    pip install --upgrade pip

                    # Install project dependencies from the requirements.txt file
                    pip install -r app/requirements.txt
                '''
            }
        }

        stage('Build') {
            steps {
                // Here you can include any build steps or additional scripts
                echo "Building the project"
            }
        }

        stage('Test') {
            steps {
                sh '''
                    . venv/bin/activate
                    # Run your tests or any necessary commands for testing
                    echo "Running tests"
                    pytest --disable-warnings
                '''
            }
        }

        stage('Deploy') {
            steps {
                // You can include the deployment step or other actions after build
                echo "Deploying the application"
            }
        }

        stage('Clean Up') {
            steps {
                sh '''
                    # Deactivate virtual environment and clean up
                    deactivate
                    rm -rf venv
                '''
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
